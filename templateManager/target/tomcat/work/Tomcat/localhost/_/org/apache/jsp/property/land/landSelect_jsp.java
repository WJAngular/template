/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-02-25 02:29:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.property.land;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.lckj.core.web.Path;

public final class landSelect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/tld/common.tld", Long.valueOf(1456365987292L));
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 request.setAttribute("ctx",Path.getContextPath()); 
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar ctx = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\";\r\n");
      out.write("</script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/include/jquery-easyui-1.4.2/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/include/jquery-easyui-1.4.2/themes/icon.css\">\r\n");
      out.write("<script type=\"text/JavaScript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resource/js/public_easyui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resource/js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/include/jquery-easyui-1.4.2/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ctx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/include/jquery-easyui-1.4.2/locale/easyui-lang-zh_CN.js\"></script>\r\n");

	String code = request.getParameter("orgCode");
	String inputId = request.getParameter("inputId");
	String divId = request.getParameter("divId");
	String roomState = request.getParameter("roomState");

      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\t$.ajaxSetup({cache: false});\r\n");
      out.write("\t\t$(\"#propertyTree\").tree({\r\n");
      out.write("\t\t\tcheckbox: false,   \r\n");
      out.write("\t\t    lines:true,\r\n");
      out.write("\t        url: ctx+'/propertyStructure/list.do?orgCode=");
      out.print(code);
      out.write("',\r\n");
      out.write("\t        onLoadSuccess:function(node,data){\r\n");
      out.write("\t        \t//console.info(JSON.stringify(data));\r\n");
      out.write("\t        },\r\n");
      out.write("\t\t\tonClick: function(node){\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tonDblClick:function(node){\r\n");
      out.write("\t\t\t\tvar landType = $(\"#landType\").val();\r\n");
      out.write("\t\t\t\tif(landType != \"\" && node.type != landType){\r\n");
      out.write("\t\t\t\t\tif(landType == 1){\r\n");
      out.write("\t\t\t\t\t\talert(\"请选择项目！\");\r\n");
      out.write("\t\t\t\t\t}else if(landType == 2){\r\n");
      out.write("\t\t\t\t\t\talert(\"请选择楼宇！\");\r\n");
      out.write("\t\t\t\t\t}else if(landType == 3){\r\n");
      out.write("\t\t\t\t\t\talert(\"请选择单元！\");\r\n");
      out.write("\t\t\t\t\t}else if(landType == 4){\r\n");
      out.write("\t\t\t\t\t\talert(\"请选择房间！\");\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tvar roomState = $(\"#roomState\").val();\r\n");
      out.write("\t\t\t\t\tvar inputId = $(\"#inputId\").val();\r\n");
      out.write("\t\t\t\t\tvar divId = $(\"#divId\").val();\r\n");
      out.write("\t\t\t\t\tif(node.type == 4){\r\n");
      out.write("\t\t\t\t\t\t// 要i去选择未入住，但选择选择的是已入住\r\n");
      out.write("\t\t\t\t\t\tif(roomState == 1 && node.roomState == 2){\r\n");
      out.write("\t\t\t\t\t\t\t// 如果继续选择，则正常进行\r\n");
      out.write("\t\t\t\t\t\t\tif(confirm(\"该房间已经有用户入住，如果再次选择会将以前的用户改变为无效状态，是否继续！\")){\r\n");
      out.write("\t\t\t\t\t\t\t\tif(divId == 'undefined' || divId == ''){\r\n");
      out.write("\t\t\t\t\t\t\t\t\twindow.opener.selectPropertyCallBack(inputId,node);\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\twindow.opener.selectPropertyDivCallBack(inputId,node,divId);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t}else if(roomState == 2 && node.roomState == 1){// 要求选择的是已入住，但选择选择的是未入住\r\n");
      out.write("\t\t\t\t\t\t\talert(\"请选择已有入住用户的房间！\");\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\tif(divId == 'undefined' || divId == ''){\r\n");
      out.write("\t\t\t\t\t\t\t\twindow.opener.selectPropertyCallBack(inputId,node);\r\n");
      out.write("\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\twindow.opener.selectPropertyDivCallBack(inputId,node,divId);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\tif(divId == 'undefined' || divId == ''){\r\n");
      out.write("\t\t\t\t\t\t\twindow.opener.selectPropertyCallBack(inputId,node);\r\n");
      out.write("\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\twindow.opener.selectPropertyDivCallBack(inputId,node,divId);\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\twindow.close();\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t/** 查询数据 */\r\n");
      out.write("\tfunction searchRecord(){\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body class='easyui-layout' style=\"padding:0px;\">\r\n");
      out.write("\t<input id=\"inputId\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.inputId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t<input id=\"orgCode\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.orgCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t<input id=\"divId\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.divId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t<input id=\"landType\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.landType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t<input id=\"roomState\" type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${param.roomState}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("\t<div style=\"width:450px;height:380px;overflow-y:scroll;padding:1px\">\r\n");
      out.write("\t\t<ul id=\"propertyTree\" class=\"easyui-tree\"></ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
